<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnMenu.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAD
        dAAAA3QBAitBRQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAASsSURBVHhe7d3P
        axR3GAbwUAsVKniQ2j/Ai4cei3pQMFSyM7nooYudWSz9C4I5tQcPHgr1IHjqXQJeQqFeY2bZNYf8AcWT
        UBGDIKHkUggeqt++72zcHzMPrePutuz3eQ6fQ575bobZ500yO7tMlkIIQgyGwgOGwgOGwgOGwgOGwgOG
        pZUbp0OSr5q1kHZuygLy7rxD7xJ1bCaD27c/sgesmxcmSFS80/Wy47HOR+Wn18+EJNupPEiiYx171xMD
        cKV90jbu1RdLpPbKzocDkGT3wSKJmnVeDkArX8YLJHrWvQ/AHbhR4mfd26//vFvbICy6PgAHlVB4HNjL
        v/wp2CAMrHsfgAdwo8TPurcBKC8Z4gUSN+t+KXz17SmbhFdwgcTLO7fuBxeCWvlVuEji5Z0PrwSWQ5Dd
        gwslPt71Ue+jAXBpds0W7NceILHYLzse63xyAJy/dzw4MdwwT8yheS0LybvzDjfKTsHnAia+ED4wFB4w
        FB4wFB4wFB4wFB4wFB4wFB4wFB4wFB4wFB4wFB4wFB4wFB4wFB4wFB4wFB4wFB4wFB4wFB4wFB4wFB4w
        FB4wFB4wFB4wFB4wFB4wFB4wFB4wFB4wFB4wFB4wHPIbSLXycyHtXKC2+s35kLY/g8/Rf6HX+zhs9b4I
        270LjXR3zoWiOAW/55F6mGQXQ5JvmmcG3WaE2fOQ5r/YD8Vy7Xmbta2tT63EH8N2f9ccmjCFZ6Hob9r3
        u1jdz+iLy98dD2l21w7yTeWgpe5tSDo/h8vtE+NP5swU/UtW2u+VEmfhTSh6d+03yvF3+xrssN0+Zge1
        WzlI+Xe/hTT9ZFjcLBS9r8uicIGzshs2N4/5/gY7TbIfwMHJe+n8NFHgNIricyvnj0pZ8/Ho8fe+z6Ww
        kp21A/E7SoGDk/fwl50kflkr80Ns93+tFTU/r+3E8qzfLv5W5YCkKT93QoU20eudsFLm/au/onfLB+Bh
        7YCkKXs2QalN+Bk6LGmeHj/0AXhZORhp7s/q/+NrrOiv4ZLm6qUGYDYWegD0J2B69myCUpv4H/8E6CRw
        Wgt9EqiXgdNa8JeBvmNdCJrCol8I8h3rUvCHiuRSsNObQU1E9mbQOL0d/E8ifjsY0QdCBqg+ECJUYCg8
        YCg8YCg8YCg8YCg8YCg8YCg8YCg8YCg8YCg8YCg8YCg8YCg8YCg8YCg8YCg8YCg8YCg8YCg8YCg8YCg8
        YCg8YCg8YCg8YCg8YCg8YCg8YCg8YCg8YCg8YCg86uHKjdMh7dwMSb5hnphD43cRk8Xj3XmHG2Wn3m2l
        74kvQppds8X7Bt0eRRbfftnxWOej8lvZPfAAiZF3PTEArfwqXCjx8s7LAfAbQaX5K7hI4uWdW/f2d788
        4cOLJG7WvQ1A/gBulPhZ9z4AT+FGiZ9177eLP6htEBYHPgDdSig8uv4S8A7YIAysex+AZbhR4mfdDy4E
        Jdl9uEAiZp0PrwReaZ+0cK++SCK1V3Y+HACXXj9jU7EDFktUrGPv+qj30QA4/993Sb5uXkw+SCLgna5X
        /7/h5ACM8/eOk3zVrJWXi2XxeHfeIfgcwDswFB4wFB4wFB4wFB4wFB4wFBZh6W/ZMbVxqNK4TwAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>